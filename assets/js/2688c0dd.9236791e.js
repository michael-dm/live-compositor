"use strict";(self.webpackChunkcompositor_live=self.webpackChunkcompositor_live||[]).push([[502],{8319:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>a});var o=t(4848),i=t(8453);const s={},l="Layouts",r={id:"concept/layouts",title:"Layouts",description:"Layout components define the size, position, and simple styling of other components.",source:"@site/pages/concept/layouts.md",sourceDirName:"concept",slug:"/concept/layouts",permalink:"/docs/concept/layouts",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Component",permalink:"/docs/concept/component"},next:{title:"Shaders",permalink:"/docs/concept/shaders"}},c={},a=[{value:"Common properties",id:"common-properties",level:2},{value:"Absolute positioning properties",id:"absolute-positioning-properties",level:3},{value:"Size",id:"size",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"layouts",children:"Layouts"}),"\n",(0,o.jsx)(n.p,{children:"Layout components define the size, position, and simple styling of other components."}),"\n",(0,o.jsx)(n.p,{children:"Currently, we support the following layout components:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"../api/components/View",children:"View"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"../api/components/Tiles",children:"Tiles"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"../api/components/Rescaler",children:"Rescaler"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"common-properties",children:"Common properties"}),"\n",(0,o.jsx)(n.p,{children:"Most layout components share a set of common properties."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"width"})," - Width of a component in pixels."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"height"})," - Height of a component in pixels."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"absolute-positioning-properties",children:"Absolute positioning properties"}),"\n",(0,o.jsx)(n.p,{children:"When a component is positioned absolutely, it will ignore the normal layout of its parent."}),"\n",(0,o.jsx)(n.p,{children:"Common properties that imply the component will be absolutely positioned:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"top"})," - Distance in pixels between this component's top edge and its parent's top edge."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"bottom"})," - Distance in pixels between this component's bottom edge and its parent's bottom edge."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"left"})," - Distance in pixels between this component's left edge and its parent's left edge."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"right"})," - Distance in pixels between this component's right edge and its parent's right edge."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"rotation"})," - Rotation in degrees."]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsx)(n.p,{children:"Not all components support everything listed above. Consult the API reference for each component to verify it."})}),"\n",(0,o.jsx)(n.h3,{id:"size",children:"Size"}),"\n",(0,o.jsx)(n.p,{children:"The size of a layout component is defined by its parent:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"If a layout component is a root in a component tree, then its size is based on the declared resolution of an output stream."}),"\n",(0,o.jsxs)(n.li,{children:["If a layout component is a child of a non-layout component, then it has to have its size defined, usually via the ",(0,o.jsx)(n.code,{children:"width"}),"/",(0,o.jsx)(n.code,{children:"height"})," fields."]}),"\n",(0,o.jsxs)(n.li,{children:["If a layout component is a child of another layout component, then, unless explicitly defined, its size will be based on the area defined by its parent. For example:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["For the ",(0,o.jsx)(n.code,{children:"Tiles"})," component, it will be an area of a single tile."]}),"\n",(0,o.jsxs)(n.li,{children:["For the ",(0,o.jsx)(n.code,{children:"View"})," component, it will be an area calculated based on the sizes of other sibling components."]}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var o=t(6540);const i={},s=o.createContext(i);function l(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);