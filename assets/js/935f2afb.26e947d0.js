"use strict";(self.webpackChunkcompositor_live=self.webpackChunkcompositor_live||[]).push([[8581],{35610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"link","label":"Getting started","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Guides","items":[{"type":"link","label":"Quick start","href":"/docs/guides/quick-start","docId":"guides/quick-start","unlisted":false},{"type":"link","label":"Deliver input streams","href":"/docs/guides/deliver-input","docId":"guides/deliver-input","unlisted":false},{"type":"link","label":"Receive output streams","href":"/docs/guides/receive-output","docId":"guides/receive-output","unlisted":false},{"type":"link","label":"Basic Layouts","href":"/docs/guides/basic-layouts","docId":"guides/basic-layouts","unlisted":false},{"type":"link","label":"Transitions (View/Rescaler)","href":"/docs/guides/view-transition","docId":"guides/view-transition","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/category/guides"},{"type":"category","label":"Concepts","items":[{"type":"link","label":"Overview","href":"/docs/concept/overview","docId":"concept/overview","unlisted":false},{"type":"link","label":"Component","href":"/docs/concept/component","docId":"concept/component","unlisted":false},{"type":"link","label":"Layouts","href":"/docs/concept/layouts","docId":"concept/layouts","unlisted":false},{"type":"link","label":"Shaders","href":"/docs/concept/shaders","docId":"concept/shaders","unlisted":false},{"type":"link","label":"Web Renderer","href":"/docs/concept/web","docId":"concept/web","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/concept/overview"},{"type":"category","label":"Deployment","items":[{"type":"link","label":"Overview","href":"/docs/deployment/overview","docId":"deployment/overview","unlisted":false},{"type":"link","label":"Requirements","href":"/docs/deployment/requirements","docId":"deployment/requirements","unlisted":false},{"type":"link","label":"Configuration","href":"/docs/deployment/configuration","docId":"deployment/configuration","unlisted":false},{"type":"link","label":"Example: AWS EC2","href":"/docs/deployment/aws-ec2","docId":"deployment/aws-ec2","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/deployment/overview"},{"type":"category","label":"API Reference","collapsible":false,"items":[{"type":"link","label":"HTTP Routes","href":"/docs/api/routes","docId":"api/routes","unlisted":false},{"type":"link","label":"Events","href":"/docs/api/events","docId":"api/events","unlisted":false},{"type":"category","label":"Components","collapsible":false,"description":"Basic blocks used to define a scene.","items":[{"type":"link","label":"InputStream","href":"/docs/api/components/InputStream","docId":"api/components/InputStream","unlisted":false},{"type":"link","label":"View","href":"/docs/api/components/View","docId":"api/components/View","unlisted":false},{"type":"link","label":"Rescaler","href":"/docs/api/components/Rescaler","docId":"api/components/Rescaler","unlisted":false},{"type":"link","label":"Tiles","href":"/docs/api/components/Tiles","docId":"api/components/Tiles","unlisted":false},{"type":"link","label":"Text","href":"/docs/api/components/Text","docId":"api/components/Text","unlisted":false},{"type":"link","label":"Shader","href":"/docs/api/components/Shader","docId":"api/components/Shader","unlisted":false},{"type":"link","label":"Image","href":"/docs/api/components/Image","docId":"api/components/Image","unlisted":false},{"type":"link","label":"WebView","href":"/docs/api/components/WebView","docId":"api/components/WebView","unlisted":false}],"collapsed":false},{"type":"category","label":"Renderers","collapsible":false,"description":"Resources that need to be registered first before they can be used.","items":[{"type":"link","label":"Shader","href":"/docs/api/renderers/shader","docId":"api/renderers/shader","unlisted":false},{"type":"link","label":"Image","href":"/docs/api/renderers/image","docId":"api/renderers/image","unlisted":false},{"type":"link","label":"Web Renderer","href":"/docs/api/renderers/web","docId":"api/renderers/web","unlisted":false}],"collapsed":false},{"type":"category","label":"Outputs","collapsible":false,"description":"Elements that deliver generated media.","items":[{"type":"link","label":"RTP","href":"/docs/api/outputs/rtp","docId":"api/outputs/rtp","unlisted":false},{"type":"link","label":"MP4","href":"/docs/api/outputs/mp4","docId":"api/outputs/mp4","unlisted":false}],"collapsed":false},{"type":"category","label":"Inputs","collapsible":false,"description":"Elements that deliver media from external sources.","items":[{"type":"link","label":"RTP","href":"/docs/api/inputs/rtp","docId":"api/inputs/rtp","unlisted":false},{"type":"link","label":"MP4","href":"/docs/api/inputs/mp4","docId":"api/inputs/mp4","unlisted":false},{"type":"link","label":"DeckLink","href":"/docs/api/inputs/decklink","docId":"api/inputs/decklink","unlisted":false}],"collapsed":false}],"collapsed":false,"href":"/docs/category/api-reference"}]},"docs":{"api/components/Image":{"id":"api/components/Image","title":"Image","description":"A component for rendering images.","sidebar":"sidebar"},"api/components/InputStream":{"id":"api/components/InputStream","title":"InputStream","description":"InputStream represents an input.","sidebar":"sidebar"},"api/components/Rescaler":{"id":"api/components/Rescaler","title":"Rescaler","description":"Rescaler is a layout component responsible for rescaling other components.","sidebar":"sidebar"},"api/components/Shader":{"id":"api/components/Shader","title":"Shader","description":"Shader applies transformation defined via WGSL shader on its children. Learn more.","sidebar":"sidebar"},"api/components/Text":{"id":"api/components/Text","title":"Text","description":"A component for rendering text.","sidebar":"sidebar"},"api/components/Tiles":{"id":"api/components/Tiles","title":"Tiles","description":"Tiles is a layout component that places all the child components next to each other while maximizing the use of available space. The component divides its area into multiple rectangles/tiles, one for each child component. All of those rectangles are the same size and do not overlap over each other.","sidebar":"sidebar"},"api/components/View":{"id":"api/components/View","title":"View","description":"View is the compositor\'s core layout mechanism. Its role is analogous to the","sidebar":"sidebar"},"api/components/WebView":{"id":"api/components/WebView","title":"WebView","description":"Required feature: web_renderer","sidebar":"sidebar"},"api/events":{"id":"api/events","title":"Events","description":"WebSocket events","sidebar":"sidebar"},"api/generated/component-Image":{"id":"api/generated/component-Image","title":"component-Image","description":"Image"},"api/generated/component-InputStream":{"id":"api/generated/component-InputStream","title":"component-InputStream","description":"InputStream"},"api/generated/component-Rescaler":{"id":"api/generated/component-Rescaler","title":"component-Rescaler","description":"Rescaler"},"api/generated/component-Shader":{"id":"api/generated/component-Shader","title":"component-Shader","description":"Shader"},"api/generated/component-Text":{"id":"api/generated/component-Text","title":"component-Text","description":"Text"},"api/generated/component-Tiles":{"id":"api/generated/component-Tiles","title":"component-Tiles","description":"Tiles"},"api/generated/component-View":{"id":"api/generated/component-View","title":"component-View","description":"View"},"api/generated/component-WebView":{"id":"api/generated/component-WebView","title":"component-WebView","description":"WebView"},"api/generated/output-Mp4Output":{"id":"api/generated/output-Mp4Output","title":"output-Mp4Output","description":"Mp4Output"},"api/generated/output-RtpOutputStream":{"id":"api/generated/output-RtpOutputStream","title":"output-RtpOutputStream","description":"RtpOutputStream"},"api/generated/renderer-DeckLink":{"id":"api/generated/renderer-DeckLink","title":"renderer-DeckLink","description":"DeckLink"},"api/generated/renderer-Image":{"id":"api/generated/renderer-Image","title":"renderer-Image","description":"Image"},"api/generated/renderer-Mp4Input":{"id":"api/generated/renderer-Mp4Input","title":"renderer-Mp4Input","description":"Mp4Input"},"api/generated/renderer-RtpInputStream":{"id":"api/generated/renderer-RtpInputStream","title":"renderer-RtpInputStream","description":"RtpInputStream"},"api/generated/renderer-Shader":{"id":"api/generated/renderer-Shader","title":"renderer-Shader","description":"Shader"},"api/generated/renderer-WebRenderer":{"id":"api/generated/renderer-WebRenderer","title":"renderer-WebRenderer","description":"WebRenderer"},"api/inputs/decklink":{"id":"api/inputs/decklink","title":"DeckLink","description":"Added in v0.3.0","sidebar":"sidebar"},"api/inputs/mp4":{"id":"api/inputs/mp4","title":"MP4","description":"An input type that allows the compositor to read static MP4 files.","sidebar":"sidebar"},"api/inputs/rtp":{"id":"api/inputs/rtp","title":"RTP","description":"An input type that allows streaming video and audio to the compositor over RTP.","sidebar":"sidebar"},"api/outputs/mp4":{"id":"api/outputs/mp4","title":"MP4","description":"Added in v0.3.0","sidebar":"sidebar"},"api/outputs/rtp":{"id":"api/outputs/rtp","title":"RTP","description":"An output type that allows streaming video and audio from the compositor over RTP.","sidebar":"sidebar"},"api/renderers/image":{"id":"api/renderers/image","title":"Image","description":"Represents an image asset uploaded to the compositor. Used by a Image component.","sidebar":"sidebar"},"api/renderers/shader":{"id":"api/renderers/shader","title":"Shader","description":"Represents compiled shader. Used by a Shader component.","sidebar":"sidebar"},"api/renderers/web":{"id":"api/renderers/web","title":"Web Renderer","description":"Required feature: web_renderer","sidebar":"sidebar"},"api/routes":{"id":"api/routes","title":"Routes","description":"API routes to configure the compositor.","sidebar":"sidebar"},"common/absolute-position":{"id":"common/absolute-position","title":"absolute-position","description":"A component is absolutely positioned if it defines fields like top, left, right, bottom, or rotation."},"concept/component":{"id":"concept/component","title":"Component","description":"A component is a basic block used to define how video streams are composed.","sidebar":"sidebar"},"concept/layouts":{"id":"concept/layouts","title":"Layouts","description":"Layout components define the size, position, and simple styling of other components.","sidebar":"sidebar"},"concept/overview":{"id":"concept/overview","title":"Concepts","description":"Inputs/outputs streams","sidebar":"sidebar"},"concept/shaders":{"id":"concept/shaders","title":"Shaders","description":"Shaders are small programs that we send to a GPU to perform some computation for us. They are used extensively in the LiveCompositor. All builtin transformation are implemented as shaders under the hood. It is also possible to create render nodes that run a custom shader on their input. Since LiveCompositor is implemented using wgpu, the shaders have to be written in WGSL (WebGPU Shading Language). They also have to fulfill some custom requirements that allow them to be run by the LiveCompositor.","sidebar":"sidebar"},"concept/web":{"id":"concept/web","title":"Web Renderer","description":"Web renderer allows you to capture that output of a browser and compose it with other streams.","sidebar":"sidebar"},"deployment/aws-ec2":{"id":"deployment/aws-ec2","title":"Example: AWS EC2","description":"This is an example configuration that shows how to deploy LiveCompositor to an AWS EC2 instance with Terraform configuration.","sidebar":"sidebar"},"deployment/configuration":{"id":"deployment/configuration","title":"Configuration","description":"Environment variables","sidebar":"sidebar"},"deployment/overview":{"id":"deployment/overview","title":"Deployment","description":"LiveCompositor can be deployed in various ways, depending on your platform, used features and whether it is used standalone or via Membrane Framework plugin.","sidebar":"sidebar"},"deployment/requirements":{"id":"deployment/requirements","title":"Requirements","description":"LiveCompositor imposes certain requirements both in the runtime and during a build. Specifics might differ depending on the way you use the compositor and features you are requiring.","sidebar":"sidebar"},"guides/basic-layouts":{"id":"guides/basic-layouts","title":"Basic Layouts","description":"This guide will explain how to create simple scene that is combining input streams in a simple layout into single output stream.","sidebar":"sidebar"},"guides/deliver-input":{"id":"guides/deliver-input","title":"How to deliver input streams","description":"Live Compositor currently supports 2 input types:","sidebar":"sidebar"},"guides/quick-start":{"id":"guides/quick-start","title":"Quick start","description":"This guide will explain basic LiveCompositor setup.","sidebar":"sidebar"},"guides/receive-output":{"id":"guides/receive-output","title":"How to receive output streams","description":"Live Compositor currently supports 2 output types:","sidebar":"sidebar"},"guides/view-transition":{"id":"guides/view-transition","title":"Transitions (View/Rescaler)","description":"This guide will show a few basic examples of animated transitions on View/Rescaler components.","sidebar":"sidebar"},"intro":{"id":"intro","title":"Getting started","description":"What is Live Compositor?","sidebar":"sidebar"}}}')}}]);